---
  import { defineAction } from 'astro:actions';
import { z } from 'astro:schema';
 
    const name='' ;
    
export const Props={
  title:'',
  methods: {
    test(name){
     return name
    }
  }
}
//return Props.methods.myfunctions();
  const errors = { username: "", email: "", password: "" };
if (Astro.request.method === "Get") {
  try {
    const data = await Astro.request.formData();
    const name = data.get("username");
    const email = data.get("email");
    const password = data.get("password");
    
    // Do something with the data
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

export const server = {
  getGreeting: defineAction({
    input: z.object({
      name: z.string(),
    }),
    
  })
}


---
<section id="section"></section>
<form class="max-w-sm mx-auto box" id="news">
<div class="mb-5">
    <label for="username" class="block mb-2 text-sm font-medium text-gray-900 ">Username</label>
    <input type="text" id="username" name="username" value="Johathan" class="shadow-xs bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-xs-light" required />
    {errors.username && <p>{errors.username}</p>}
  </div>
  <div class="mb-5">
    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">Email</label>
    <input type="email" id="email" name="email" value="rosariojohathan@hotmail.com" class="shadow-xs bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-xs-light" placeholder="name@flowbite.com" required />
    {errors.email && <p>{errors.email}</p>}
  </div>
  <div class="mb-5">
    <label for="repeat-password" class="block mb-2 text-sm font-medium text-gray-900 ">Password</label>
    <input type="password" id="password" name="password" value="johathan" class="shadow-xs bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 dark:shadow-xs-light" required />
     {errors.password && <p>{errors.password}</p>}
  </div>
  <div class="flex items-start mb-5">
    <div class="flex items-center h-5">
      <input id="terms" type="checkbox" value="" class="w-4 h-4 border border-gray-300 rounded-sm bg-gray-50 focus:ring-3 focus:ring-blue-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800" required />
    </div>
    <label for="terms" class="ms-2 text-sm font-medium text-gray-900 dark:text-gray-300">I agree with the <a href="#" class="text-blue-600 hover:underline dark:text-blue-500">terms and conditions</a></label>
  </div>
  <button type="button" disabled id="send"  onClick={Props.methods.test('johathan')} class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Register new account</button>
</form>
  
<script is:inline>
  const get=window.location.pathname.split("/")[1];
  //console.log(get.pathname.split("/")[1]);
     const form=document.getElementById('news')
    const section=document.getElementById('section');
    const contenedor= document.createElement('div');
    const title= document.createElement('h1');
  if(get=="formulario-registrar"){
    title.appendChild(document.createTextNode('Formulario de insertar'));
    contenedor.setAttribute('class', 'mx-auto max-w-screen-xl p-4');
    title.setAttribute('class', ' my-4 text-red-900');
    form.setAttribute('class', 'static!');
    contenedor.appendChild(title);
    contenedor.appendChild(form);
    document.getElementById("section").appendChild(contenedor);
   }
  const check=document.querySelector('#terms');
  check.addEventListener('click',()=>checking(check.checked));
const checking=(item)=>
{
   const buttonActive=document.getElementById('send');
  if(item==true)
  {
   buttonActive.toggleAttribute("disabled");
  } else
  {
     buttonActive.toggleAttribute("disabled");
  }
}
 
  </script>